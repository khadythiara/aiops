version: '3.8'

services:
  flask-app:
    build: ./flask-app
    container_name: flask-log-app
    volumes:
      - logs-volume:/app/logs
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch  # facultatif si tu Ã©cris dans ES directement

  ml-api:
    build: ./ml-api
    container_name: ml-api
    volumes:
      - logs-volume:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      - flask-app
  
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/analyze"]
      interval: 60s
      timeout: 30s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.0
    container_name: logstash
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - logs-volume:/app/logs
    ports:
      - "5044:5044"
    depends_on:
      - flask-app
      - elasticsearch

volumes:
  logs-volume:
